[{"E:\\LUCIDEX\\Partnership\\ao\\app-landing\\src\\index.js":"1","E:\\LUCIDEX\\Partnership\\ao\\app-landing\\src\\App.js":"2","E:\\LUCIDEX\\Partnership\\ao\\app-landing\\src\\reportWebVitals.js":"3","E:\\LUCIDEX\\Partnership\\ao\\app-landing\\src\\views\\questions.js":"4","E:\\LUCIDEX\\Partnership\\ao\\app-landing\\src\\views\\home.js":"5","E:\\LUCIDEX\\Partnership\\ao\\app-landing\\src\\views\\pricing.js":"6","E:\\LUCIDEX\\Partnership\\ao\\app-landing\\src\\views\\regDashbord.js":"7","E:\\LUCIDEX\\Partnership\\ao\\app-landing\\src\\assets\\components\\qblock.js":"8","E:\\LUCIDEX\\Partnership\\ao\\app-landing\\src\\assets\\components\\adashblock.js":"9"},{"size":565,"mtime":1608190244875,"results":"10","hashOfConfig":"11"},{"size":881,"mtime":1608190244871,"results":"12","hashOfConfig":"11"},{"size":375,"mtime":1608190244886,"results":"13","hashOfConfig":"11"},{"size":4946,"mtime":1608190244887,"results":"14","hashOfConfig":"11"},{"size":2909,"mtime":1608190244887,"results":"15","hashOfConfig":"11"},{"size":0,"mtime":1608190244887,"results":"16","hashOfConfig":"11"},{"size":8058,"mtime":1608190244887,"results":"17","hashOfConfig":"11"},{"size":1734,"mtime":1608190244872,"results":"18","hashOfConfig":"11"},{"size":1140,"mtime":1608190244872,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1nqqw3q",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"22"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},"E:\\LUCIDEX\\Partnership\\ao\\app-landing\\src\\index.js",[],["43","44"],"E:\\LUCIDEX\\Partnership\\ao\\app-landing\\src\\App.js",[],"E:\\LUCIDEX\\Partnership\\ao\\app-landing\\src\\reportWebVitals.js",[],"E:\\LUCIDEX\\Partnership\\ao\\app-landing\\src\\views\\questions.js",["45","46","47","48"],"import React, { useEffect, useState } from \"react\";\r\nimport \"../assets/css/styles.css\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport KeyboardArrowRightIcon from \"@material-ui/icons/KeyboardArrowRight\";\r\nimport Qblock from \"../assets/components/qblock\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport QUp from \"../assets/img/qUp.svg\";\r\nimport QDown from \"../assets/img/qDown.svg\";\r\nimport KeyboardBackspaceIcon from \"@material-ui/icons/KeyboardBackspace\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  extendedIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst Questions = () => {\r\n  const [quiz, setQuiz] = useState([]);\r\n  const [sid, setSid] = useState(0);\r\n  const [eid, setEid] = useState(1);\r\n  const [btnName, setBtn] = useState(\"Next\");\r\n  const [answer, setAnswer] = useState([]);\r\n  const [comment, setComment] = useState(\"\");\r\n  const [showComment, setshowComment] = useState(true);\r\n\r\n  const handleCheckbox = (e) => {\r\n    let data = answer;\r\n    console.log(data);\r\n    if (e.target.checked) {\r\n      data.push(e.target.value);\r\n      setAnswer(data);\r\n    } else if (answer != null) {\r\n      console.log(\"removed\", answer);\r\n      setAnswer(answer.filter((item) => item !== e.target.value));\r\n    }\r\n    // console.log(answer);\r\n  };\r\n  const onChangeComment = (e) => {\r\n    // console.log(data);\r\n    // data.push(e.target.value);\r\n    setComment(e.target.value);\r\n  };\r\n\r\n  const nxtBtnClick = () => {\r\n    answer.push(comment);\r\n    if (sid == 3) {\r\n      setshowComment(false);\r\n    }\r\n    let ques = quiz.slice(sid, eid);\r\n    let adata = answer;\r\n    let data = ques[0].question;\r\n    localStorage.setItem(data, adata);\r\n    setAnswer([]);\r\n    setComment(\"\");\r\n    // adata = null;\r\n    console.log(\"------data----\", adata);\r\n  };\r\n\r\n  const history = useHistory();\r\n\r\n  const routeChange = () => {\r\n    let path = `/Dashboard`;\r\n    history.push(path);\r\n  };\r\n\r\n  const routeChangeHome = () => {\r\n    let path = `/`;\r\n    history.push(path);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getquiz();\r\n  }, []);\r\n\r\n  const getquiz = async () => {\r\n    const response = await fetch(\"data.json\");\r\n    const data = await response.json();\r\n    setQuiz(data);\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <img src={QUp} id=\"bgu\" alt=\"\" />\r\n      <img src={QDown} id=\"bgd\" alt=\"\" />\r\n      <Button\r\n        size=\"medium\"\r\n        variant=\"contained\"\r\n        className={classes.margin}\r\n        disableElevation\r\n        style={{ backgroundColor: \"#ffbab3\", color: \"#000000\" }}\r\n        startIcon={<KeyboardBackspaceIcon />}\r\n        onClick={() => {\r\n          if (sid < 5 && eid < 6) {\r\n            setEid(eid - 1);\r\n            setSid(sid - 1);\r\n          }\r\n          if (sid == 0) {\r\n            routeChangeHome();\r\n          }\r\n          console.log(eid, sid);\r\n        }}\r\n      >\r\n        Back\r\n      </Button>\r\n\r\n      <header className=\"masthead\">\r\n        <div className=\"container h-100\">\r\n          <div className=\"row h-100\">\r\n            <div className=\"col-lg-12 my-auto\">\r\n              {quiz.slice(sid, eid).map((quiz) => (\r\n                <Qblock\r\n                  question={quiz.question}\r\n                  answers={quiz.answers}\r\n                  info={quiz.info}\r\n                  show={showComment}\r\n                  handleCheckbox={handleCheckbox}\r\n                  onChangeComment={onChangeComment}\r\n                />\r\n              ))}\r\n              <div\r\n                className=\"comment\"\r\n                style={{ display: showComment ? \"block\" : \"none\" }}\r\n              >\r\n                <label>Comment</label>\r\n                <input\r\n                  type=\"text\"\r\n                  value={comment}\r\n                  name=\"uComment\"\r\n                  placeholder=\"Type Comment...\"\r\n                  onChange={(e) => onChangeComment(e)}\r\n                />\r\n              </div>\r\n              <div className=\"nxtButton\">\r\n                <Button\r\n                  variant=\"contained\"\r\n                  style={{ backgroundColor: \"#EA745B\", color: \"#ffffff\" }}\r\n                  startIcon={<KeyboardArrowRightIcon />}\r\n                  onClick={() => {\r\n                    if (sid < 4 && eid < 5) {\r\n                      setEid(eid + 1);\r\n                      setSid(sid + 1);\r\n                    }\r\n                    if (sid == 3) {\r\n                      setBtn(\"Finish\");\r\n                    }\r\n                    if (sid == 4) {\r\n                      routeChange();\r\n                    }\r\n                    nxtBtnClick();\r\n                    console.log(eid, sid);\r\n                  }}\r\n                >\r\n                  {btnName}\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </header>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Questions;\r\n","E:\\LUCIDEX\\Partnership\\ao\\app-landing\\src\\views\\home.js",[],"E:\\LUCIDEX\\Partnership\\ao\\app-landing\\src\\views\\pricing.js",[],"E:\\LUCIDEX\\Partnership\\ao\\app-landing\\src\\views\\regDashbord.js",["49","50","51","52","53"],"import React, { useEffect, useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport \"../assets/css/styles.css\";\r\nimport DoneIcon from \"@material-ui/icons/Done\";\r\nimport Dash from \"../assets/img/dash.svg\";\r\nimport Adashblock from \"../assets/components/adashblock\";\r\n\r\nconst Dashboard = () => {\r\n  const [quizDash, setQuiz] = useState([]);\r\n  useEffect(() => {\r\n    getquiz();\r\n  }, []);\r\n\r\n  const getquiz = async () => {\r\n    const response = await fetch(\"data.json\");\r\n    const data = await response.json();\r\n    setQuiz(data);\r\n  };\r\n\r\n  //   const q1A = [];\r\n  var q1Ans = quizDash.slice(0, 1);\r\n  let q1A = [\"We are not concerned about employees leaving\"];\r\n  var q1 = localStorage\r\n    .getItem(\r\n      \"When an employee leaves what is/are the biggest concern/s Organizations face various issues when employees leave?\"\r\n    )\r\n    .split(\",\")\r\n    .filter(Boolean);\r\n  //   console.log(q1A);\r\n\r\n  //   const q2A = [];\r\n  var q2Ans = quizDash.slice(1, 2);\r\n  let q2A = [\"They are sharing information perfectly\"];\r\n  var q2 = localStorage\r\n    .getItem(\r\n      'What prevents employees from sharing information? It\"s usually hard for employees to share information because it takes effort and the benefits are not clear'\r\n    )\r\n    .split(\",\")\r\n    .filter(Boolean);\r\n  //   console.log(q2A);\r\n\r\n  //   const q3A = [];\r\n  var q3Ans = quizDash.slice(2, 3);\r\n  let q3A = [\r\n    \"By enforcing vacations where the employee can’t communicate with the company\",\r\n    \"By moving employees to a different location where employee can communicate with company\",\r\n  ];\r\n  var q3 = localStorage\r\n    .getItem(\r\n      \"How do you test how the company will function in the absence of the key employee? These tests are a valuable exercise to understand the resilience of the organization under stress\"\r\n    )\r\n    .split(\",\")\r\n    .filter(Boolean);\r\n  //   console.log(q3A);\r\n\r\n  //   const q4A = [];\r\n  var q4Ans = quizDash.slice(3, 4);\r\n  let q4A = [\r\n    \"We train and motivate employees to share information\",\r\n    \"We have processes and systems to share information\",\r\n    \"We make knowledge sharing a part of the annual/quarterly evaluation process\",\r\n  ];\r\n  var q4 = localStorage\r\n    .getItem(\r\n      \"What is being done by the company to ensure that knowledge about company processes are shared?\"\r\n    )\r\n    .split(\",\")\r\n    .filter(Boolean);\r\n  //   console.log(q4A);\r\n\r\n  //   var q5A = [];\r\n  var q5Ans = quizDash.slice(4, 5);\r\n  let q5A = [\r\n    \"CEO / Owner / Investor\",\r\n    \"Manager\",\r\n    \"Non Managerial Employee\",\r\n    \"Student\",\r\n  ];\r\n  var q5 = localStorage\r\n    .getItem(\"What best describes you?\")\r\n    .split(\",\")\r\n    .filter(Boolean);\r\n  //   console.log(q5A);\r\n  q1.pop();\r\n  q2.pop();\r\n  q3.pop();\r\n  q4.pop();\r\n  q5.pop();\r\n  return (\r\n    // <header className=\"masthead\" style={{ paddingTop: \"20px\" }}>\r\n    <div>\r\n      <img src={Dash} id=\"bgdash\" alt=\"\" />\r\n      <div className=\"container h-100\">\r\n        <div className=\"row h-100\">\r\n          <div className=\"col-lg-8 mx-auto\">\r\n            <div className=\"RegBox\">\r\n              <div className=\"Title\">\r\n                <h3>\r\n                  We’ll send the{\" \"}\r\n                  <div style={{ color: \"#FF715D\", display: \"inline\" }}>\r\n                    diagnostic\r\n                  </div>{\" \"}\r\n                  to your email\r\n                </h3>\r\n              </div>\r\n              <div className=\"form mx-auto\">\r\n                <form>\r\n                  <div className=\"group-input\">\r\n                    <label>Name</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      name=\"uName\"\r\n                      placeholder=\"John Doe\"\r\n                      required\r\n                    />\r\n                  </div>\r\n                  <div className=\"group-input\">\r\n                    <label>Email</label>\r\n                    <input\r\n                      type=\"email\"\r\n                      name=\"uEmail\"\r\n                      pattern=\"^\\w+@[a-zA-Z_]+?\\.[a-zA-Z]{2,}$\"\r\n                      placeholder=\"johndoe@gmail.com\"\r\n                      required\r\n                    />\r\n                  </div>\r\n                  <div className=\"group-input\">\r\n                    <label>Phone Number</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      required\r\n                      name=\"uPhone\"\r\n                      placeholder=\"0712345678\"\r\n                    />\r\n                  </div>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    className=\"site-btn login-btn\"\r\n                    variant=\"contained\"\r\n                    style={{ backgroundColor: \"#EA745B\", color: \"#ffffff\" }}\r\n                    startIcon={<DoneIcon />}\r\n                  >\r\n                    Submit\r\n                  </Button>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"dashboard col-lg-12 mx-auto\">\r\n            <h2>Dashboard</h2>\r\n            <div className=\"mainQ\">\r\n              <div className=\"qSection col-lg-4\">\r\n                <div className=\"questionBlock\">\r\n                  <h4>\r\n                    When an employee leaves what is/are the biggest concern/s\r\n                    Organizations face various issues when employees leave?\r\n                  </h4>\r\n                </div>\r\n                <div className=\"answerBlock\">\r\n                  {q1.map((object, index) => (\r\n                    <Adashblock answers={object} index={index} correctA={q1A} />\r\n                  ))}\r\n                </div>\r\n              </div>\r\n              <div className=\"qSection col-lg-4\">\r\n                <div className=\"questionBlock\">\r\n                  <h4>\r\n                    What prevents employees from sharing information? It\\\"s\r\n                    usually hard for employees to share information because it\r\n                    takes effort and the benefits are not clear\r\n                  </h4>\r\n                </div>\r\n                <div className=\"answerBlock\">\r\n                  {q2.map((object, index) => (\r\n                    <Adashblock answers={object} index={index} correctA={q2A} />\r\n                  ))}\r\n                </div>\r\n              </div>\r\n              <div className=\"qSection col-lg-4\">\r\n                <div className=\"questionBlock\">\r\n                  <h4>\r\n                    How do you test how the company will function in the absence\r\n                    of the key employee? These tests are a valuable exercise to\r\n                    understand the resilience of the organization under stress\r\n                  </h4>\r\n                </div>\r\n                <div className=\"answerBlock\">\r\n                  {q3.map((object, index) => (\r\n                    <Adashblock answers={object} index={index} correctA={q3A} />\r\n                  ))}\r\n                </div>\r\n              </div>\r\n              <div className=\"qSection col-lg-4\">\r\n                <div className=\"questionBlock\">\r\n                  <h4>\r\n                    What is being done by the company to ensure that knowledge\r\n                    about company processes are shared?\r\n                  </h4>\r\n                </div>\r\n                <div className=\"answerBlock\">\r\n                  {q4.map((object, index) => (\r\n                    <Adashblock answers={object} index={index} correctA={q4A} />\r\n                  ))}\r\n                </div>\r\n              </div>\r\n              <div className=\"qSection col-lg-4\">\r\n                <div className=\"questionBlock\">\r\n                  <h4>What best describes you?</h4>\r\n                </div>\r\n                <div className=\"answerBlock\">\r\n                  {q5.map((object, index) => (\r\n                    <Adashblock answers={object} index={index} correctA={q5A} />\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    // </header>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","E:\\LUCIDEX\\Partnership\\ao\\app-landing\\src\\assets\\components\\qblock.js",["54","55","56"],"import React, { useEffect, useState } from \"react\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\n\r\nconst Qblock = ({\r\n  question,\r\n  answers,\r\n  info,\r\n  handleCheckbox,\r\n  show,\r\n  onChangeComment,\r\n}) => {\r\n  var i = -1;\r\n  var j = 0;\r\n  return (\r\n    <div>\r\n      <div className=\"qblockQ\">\r\n        <h2>{question}</h2>\r\n        <h4 className=\"info\">{info}</h4>\r\n      </div>\r\n      <div className=\"answers\">\r\n        <FormControl component=\"fieldset\">\r\n          <FormGroup aria-label=\"position\" root>\r\n            {answers.map((answer) => {\r\n              i += 1;\r\n              j += 1;\r\n              return (\r\n                <FormControlLabel\r\n                  value={answers.slice(i, j)}\r\n                  onChange={(e) => handleCheckbox(e)}\r\n                  control={<Checkbox color=\"primary\" />}\r\n                  label={answers.slice(i, j)}\r\n                  labelPlacement=\"end\"\r\n                />\r\n              );\r\n            })}\r\n            <div\r\n              className=\"comment\"\r\n              style={{ display: !show ? \"inline-flex\" : \"none\" }}\r\n            >\r\n              <label>Other</label>\r\n              <input\r\n                style={{ width: \"100%\" }}\r\n                type=\"text\"\r\n                name=\"uComment\"\r\n                placeholder=\"Type...\"\r\n                onChange={(e) => onChangeComment(e)}\r\n              />\r\n            </div>\r\n          </FormGroup>\r\n        </FormControl>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Qblock;\r\n","E:\\LUCIDEX\\Partnership\\ao\\app-landing\\src\\assets\\components\\adashblock.js",["57","58","59","60","61"],"import React, { useEffect, useState } from \"react\";\r\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\n\r\nconst Adashblock = ({ answers, correctA, index }) => {\r\n  var Icon;\r\n  //   var crr = correctA;\r\n  //   if (!correctA == undefined) {\r\n  var sid = correctA.indexOf(answers);\r\n  var eid = sid + 1;\r\n  var crr = correctA.slice(sid, eid);\r\n  //   } else {\r\n  //     crr = [\"undefined\"];\r\n  //   }\r\n\r\n  console.log(\"------\", index);\r\n  console.log(sid);\r\n\r\n  if (answers == crr.toString()) {\r\n    Icon = \"correct\";\r\n  } else {\r\n    Icon = \"incorrect\";\r\n  }\r\n  console.log(\"Icon\", Icon);\r\n\r\n  const icondisplay = () => {\r\n    if (Icon == \"correct\") {\r\n      return <CheckCircleIcon style={{ color: \"#1abc9c\" }} />;\r\n    }\r\n    if (Icon == \"incorrect\") {\r\n      return <CancelIcon style={{ color: \"#e74c3c\" }} />;\r\n    } else {\r\n      return <CheckCircleIcon style={{ color: \"#1abc9c\" }} />;\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"answers\">\r\n      <div className=\"icon\">{icondisplay()}</div>\r\n      <p>{answers}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Adashblock;\r\n",{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":50,"column":13,"nodeType":"68","messageId":"69","endLine":50,"endColumn":15},{"ruleId":"66","severity":1,"message":"67","line":103,"column":19,"nodeType":"68","messageId":"69","endLine":103,"endColumn":21},{"ruleId":"66","severity":1,"message":"67","line":149,"column":29,"nodeType":"68","messageId":"69","endLine":149,"endColumn":31},{"ruleId":"66","severity":1,"message":"67","line":152,"column":29,"nodeType":"68","messageId":"69","endLine":152,"endColumn":31},{"ruleId":"70","severity":1,"message":"71","line":21,"column":7,"nodeType":"72","messageId":"73","endLine":21,"endColumn":12},{"ruleId":"70","severity":1,"message":"74","line":32,"column":7,"nodeType":"72","messageId":"73","endLine":32,"endColumn":12},{"ruleId":"70","severity":1,"message":"75","line":43,"column":7,"nodeType":"72","messageId":"73","endLine":43,"endColumn":12},{"ruleId":"70","severity":1,"message":"76","line":57,"column":7,"nodeType":"72","messageId":"73","endLine":57,"endColumn":12},{"ruleId":"70","severity":1,"message":"77","line":72,"column":7,"nodeType":"72","messageId":"73","endLine":72,"endColumn":12},{"ruleId":"70","severity":1,"message":"78","line":1,"column":17,"nodeType":"72","messageId":"73","endLine":1,"endColumn":26},{"ruleId":"70","severity":1,"message":"79","line":1,"column":28,"nodeType":"72","messageId":"73","endLine":1,"endColumn":36},{"ruleId":"70","severity":1,"message":"80","line":6,"column":8,"nodeType":"72","messageId":"73","endLine":6,"endColumn":17},{"ruleId":"70","severity":1,"message":"78","line":1,"column":17,"nodeType":"72","messageId":"73","endLine":1,"endColumn":26},{"ruleId":"70","severity":1,"message":"79","line":1,"column":28,"nodeType":"72","messageId":"73","endLine":1,"endColumn":36},{"ruleId":"66","severity":1,"message":"67","line":19,"column":15,"nodeType":"68","messageId":"69","endLine":19,"endColumn":17},{"ruleId":"66","severity":1,"message":"67","line":27,"column":14,"nodeType":"68","messageId":"69","endLine":27,"endColumn":16},{"ruleId":"66","severity":1,"message":"67","line":30,"column":14,"nodeType":"68","messageId":"69","endLine":30,"endColumn":16},"no-native-reassign",["81"],"no-negated-in-lhs",["82"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'q1Ans' is assigned a value but never used.","Identifier","unusedVar","'q2Ans' is assigned a value but never used.","'q3Ans' is assigned a value but never used.","'q4Ans' is assigned a value but never used.","'q5Ans' is assigned a value but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'FormLabel' is defined but never used.","no-global-assign","no-unsafe-negation"]